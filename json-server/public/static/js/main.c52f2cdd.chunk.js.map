{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/DishDetailComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Header","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderComments","comments","postComment","dishId","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","RenderDish","top","CommentForm","rating","DishDetail","dishItem","commentItem","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","errmMss","action","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c52f2cdd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-plus fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    )\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n  CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n    function RenderMenuItem({ dish}) {\r\n      return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n            </Link>\r\n\r\n        </Card>\r\n      )\r\n    }\r\n\r\n    const Menu = (props) => {\r\n      const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n          <div key={dish.id} className=\"col-12 col-md-5 mt-5 m-1\">\r\n            <RenderMenuItem dish={dish} />\r\n          </div>\r\n        );\r\n      });\r\n\r\n      if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Menu</h3>\r\n            <hr />\r\n          </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            {menu}\r\n          </div>\r\n        </div>\r\n     );\r\n    }\r\n\r\n    }\r\n\r\n\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n  if (isLoading) {\r\n    return(\r\n      <Loading />\r\n    )\r\n  }\r\n  else if (errMess) {\r\n    return(\r\n      <h4>{errMess}</h4>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <FadeTransform in \r\n      transformProps={{\r\n        exitTransform: 'scale(0.5) translateY(-50%'\r\n      }}>\r\n      <Card>\r\n      <CardImg src={baseUrl + item.image} alt={item.name} />\r\n        <CardBody>\r\n          <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n            <CardText>{item.description}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n      </FadeTransform>\r\n\r\n  )\r\n  }\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n      <div className=\"container\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-12 col-md m-1\">\r\n              <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n              <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;   \r\n","import { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';     \r\nimport React, {Component} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        \r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/logo192.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                    <li><Link to='/aboutus'>About Us</Link></li>\r\n                    <li><Link to='/menu'>Menu</Link></li>\r\n                    <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center links\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row justify-content-center mt-2\">\r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \"+JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" href=\"https://www.skype.com\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us Your Feedback!</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"/>\r\n                                            {' '}\r\n                                            <strong>May we contact You?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select className=\"form-control\"  model=\".contactType\" name=\"contactType\">\r\n                                        <option>Tel</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" className=\"form-control\" name=\"message\"\r\n                                        rows=\"12\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n    import {Button, Row, Col, Label, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n    import { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                    <Fade in>\r\n                    <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: '2-digit'\r\n                        }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n                    </Fade>\r\n\r\n            )\r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    <Stagger in>\r\n                    {cmnts}\r\n                    </Stagger>\r\n    \r\n                </ul>\r\n                \r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n  function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n\r\n                <div className='col-12 col-md-5 m-1'>\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if(props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.dish == null) {\r\n            return (<div></div>)\r\n        }\r\n        const dishItem = <RenderDish dish={props.dish} />\r\n        const commentItem = <RenderComments comments={props.comments}\r\n                                            postComment={props.postComment}\r\n                                            dishId={props.dish.id} />\r\n        return (\r\n          <div className='container'>\r\n                          <Breadcrumb>\r\n              <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            <div className='row'>\r\n\r\n                {dishItem}\r\n                {commentItem}\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    const required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        \r\n      }\r\n\r\n        \r\n    handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      render() {\r\n          return(\r\n              <div className=\"container\">\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                     <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                     <ModalBody>\r\n                         <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                         <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select className=\"form-control\"  model=\".rating\" name=\"rating\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>First Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\" >\r\n                                <Label htmlFor=\"comment\" md={12}>Your comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" className=\"form-control\" name=\"comment\"\r\n                                        rows=\"6\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n  \r\n                             <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                         </LocalForm>\r\n                     </ModalBody>\r\n                 </Modal>\r\n              </div>\r\n\r\n          )\r\n      }\r\n\r\n}\r\n\r\n\r\nexport default DishDetail\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Fade in>\r\n                <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                  <Media heading>{leader.name}</Media>\r\n                  <p>{leader.designation}</p>\r\n                  <p>{leader.description}</p>\r\n                </Media>\r\n              </Media>\r\n                </Fade>\r\n\r\n            </div>\r\n          );\r\n    \r\n\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        if (props.leaders.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.leaders.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n        return (\r\n            <div key={leader.id}>\r\n            <RenderLeader leader={leader} />\r\n            </div>\r\n\r\n        )\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                        {leaders}\r\n                        </Stagger>\r\n             \r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;  ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        comment: comment\r\n    }\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n\r\n    .then(response => {\r\n        if(response.ok) {\r\n         return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n     },\r\n     error => {\r\n         var errmess = new Error(error.message);\r\n         throw errmess;\r\n     })\r\n   .then(response => response.json())\r\n   .then(response=> dispatch(addComment(response)))\r\n   .catch(error => dispatch((commentsFailed(error.message))));\r\n\r\n}\r\n\r\nexport const postFeedback= (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n\r\n    .then(response => {\r\n        if(response.ok) {\r\n         return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n     },\r\n     error => {\r\n         var errmess = new Error(error.message);\r\n         throw errmess;\r\n     })\r\n   .then(response => response.json())\r\n   .then(response=> alert(JSON.stringify(response)))\r\n   .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n         .then(response => {\r\n             if(response.ok) {\r\n              return response;\r\n             }\r\n             else {\r\n                 var error = new Error('Error '+response.status+': '+response.statusText);\r\n                 error.response = response;\r\n                 throw error;\r\n             }\r\n          },\r\n          error => {\r\n              var errmess = new Error(error.message);\r\n              throw errmess;\r\n          })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch((dishesFailed(error.message))));\r\n}\r\n\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if(response.ok) {\r\n         return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n     },\r\n     error => {\r\n         var errmess = new Error(error.message);\r\n         throw errmess;\r\n     })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch((commentsFailed(error.message))));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok) {\r\n         return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n     },\r\n     error => {\r\n         var errmess = new Error(error.message);\r\n         throw errmess;\r\n     })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch((promosFailed(error.message))));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if(response.ok) {\r\n         return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n     },\r\n     error => {\r\n         var errmess = new Error(error.message);\r\n         throw errmess;\r\n     })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch((leadersFailed(error.message))));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, {Component} from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport About from './AboutComponent';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leaderLoading={this.props.leaders.isLoading}\r\n        leaderErrMess={this.props.leaders.errMess}\r\n    />\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n      />\r\n      );\r\n    };\r\n\r\n    return (\r\n    <div>\r\n    <Header />\r\n    <TransitionGroup>\r\n      <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n      <Switch>\r\n      <Route path=\"/home\" component={HomePage} />\r\n      <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n      <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n      <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />}  />\r\n      <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n      <Redirect to=\"/home\" />\r\n    </Switch>\r\n    </CSSTransition>\r\n    </TransitionGroup>\r\n    <Footer />\r\n    </div>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\nexport const Dishes = (state ={\r\n    isLoading: true,\r\n    errmMss: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider>\n\n  );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes} from './dishes';\r\nimport { Comments} from './comments';\r\nimport { Leaders} from './leaders';\r\nimport { Promotions} from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            leaders: Leaders,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}